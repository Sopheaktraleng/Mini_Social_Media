import { DynamicModule, OnApplicationShutdown } from '@nestjs/common';
import { ModuleRef } from '@nestjs/core';
import { RedisModuleAsyncOptions, RedisModuleOptions } from './interfaces';
export declare class RedisCoreModule implements OnApplicationShutdown {
    private readonly options;
    private readonly moduleRef;
    constructor(options: RedisModuleOptions, moduleRef: ModuleRef);
    onApplicationShutdown(): Promise<void>;
    static forRoot(options?: RedisModuleOptions): DynamicModule;
    static forRootAsync(options: RedisModuleAsyncOptions): DynamicModule;
    private static createAsyncProviders;
    private static createAsyncOptionsProvider;
    private static createConnectionFactory;
}
