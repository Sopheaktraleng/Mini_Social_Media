"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handleRetry = exports.getRedisToken = void 0;
const operators_1 = require("rxjs/operators");
const common_1 = require("@nestjs/common");
const constants_1 = require("./constants");
const logger = new common_1.Logger('RedisModule');
function getRedisToken(name) {
    return name && name !== constants_1.DEFAULT_REDIS_CONNECTION
        ? `${name}Connection`
        : constants_1.DEFAULT_REDIS_CONNECTION;
}
exports.getRedisToken = getRedisToken;
function handleRetry(retryAttempts = 9, retryDelay = 3000) {
    return (source) => source.pipe(operators_1.retryWhen(e => e.pipe(operators_1.scan((errorCount, error) => {
        logger.error(`Unable to connect to the Redis database. Retrying (${errorCount + 1})...`, error.stack, 'RedisModule');
        if (errorCount + 1 >= retryAttempts) {
            throw error;
        }
        return errorCount + 1;
    }, 0), operators_1.delay(retryDelay))));
}
exports.handleRetry = handleRetry;
